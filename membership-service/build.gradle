plugins {
    id 'com.palantir.docker' version '0.25.0'
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ypay.membership'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation project(path: ':common')

    testImplementation 'junit:junit:4.13.1'
    runtimeOnly 'mysql:mysql-connector-java'
//    implementation group: 'org.axonframework', name: 'axon-configuration', version: "$axonVersion"
//    implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "$axonVersion"
}


docker {
    println(tasks.bootJar.outputs.files)
    // 이미지 이름
    name rootProject.name+'-'+project.name + ":" + version
    // 어떤 docker file
    dockerfile file('../Dockerfile')

    // 어떤 파일들을 Dockerfile에 복사할 것인다
    files tasks.bootJar.outputs.files

    // Dockerfile 에 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}